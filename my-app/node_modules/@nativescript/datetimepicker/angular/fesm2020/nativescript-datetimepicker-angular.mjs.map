{"version":3,"file":"nativescript-datetimepicker-angular.mjs","sources":["../../../../../packages/datetimepicker/angular/nativescript-datetimepicker.directives.ts","../../../../../packages/datetimepicker/angular/nativescript-datetimepicker.accessors.ts","../../../../../packages/datetimepicker/angular/index.ts","../../../../../packages/datetimepicker/angular/nativescript-datetimepicker-angular.ts"],"sourcesContent":["import { Directive } from \"@angular/core\";\n\n@Directive({\n    selector: \"DatePickerField\"\n})\nexport class DatePickerFieldDirective { }\n\n@Directive({\n    selector: \"TimePickerField\"\n})\nexport class TimePickerFieldDirective { }\n\n@Directive({\n    selector: \"DateTimePickerFields\"\n})\nexport class DateTimePickerFieldsDirective { }","import { Directive, ElementRef, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { BaseValueAccessor } from \"@nativescript/angular\";\nimport { DatePickerField, TimePickerField, DateTimePickerFields } from \"@nativescript/datetimepicker\";\n\nconst DATE_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatePickerValueAccessor),\n    multi: true,\n};\n\nconst TIME_PICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimePickerValueAccessor),\n    multi: true,\n};\n\nconst DATE_TIME_PICKERS_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DateTimePickersValueAccessor),\n    multi: true,\n};\n\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DatePickerField [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n    selector: \"DatePickerField[ngModel],DatePickerField[formControlName],DatePickerField[formControl],\" +\n        \"datepickerfield[ngModel],datepickerfield[formControlName],datepickerfield[formControl],\" +\n        \"datePickerField[ngModel],datePickerField[formControlName],datePickerField[formControl],\" +\n        \"date-picker-field[ngModel],date-picker-field[formControlName],date-picker-field[formControl]\",\n    providers: [DATE_PICKER_VALUE_ACCESSOR],\n    host: {\n        \"(dateChange)\": \"handleDateChange($event)\",\n        \"(datePickerOpened)\": \"handleDatePickerOpened($event)\",\n        \"(datePickerClosed)\": \"handleDatePickerClosed($event)\"\n    },\n})\nexport class DatePickerValueAccessor extends BaseValueAccessor<DatePickerField> {\n    private _hasBeenOpened = false;\n    constructor(elementRef: ElementRef) {\n        super(elementRef.nativeElement);\n    }\n\n    writeValue(value: any): void {\n        const normalized = super.normalizeValue(value);\n        this.view.date = normalized;\n    }\n\n    handleDateChange(args: any) {\n        if (this._hasBeenOpened) {\n            this.onChange(args.value);\n        }\n    }\n\n    handleDatePickerOpened(args: any) {\n        this._hasBeenOpened = true;\n    }\n\n    handleDatePickerClosed(args: any) {\n        this.onTouched();\n    }\n}\n\n/**\n * The accessor for setting a time and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <TimePickerField [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n    selector: \"TimePickerField[ngModel],TimePickerField[formControlName],TimePickerField[formControl],\" +\n        \"timepickerfield[ngModel],timepickerfield[formControlName],timepickerfield[formControl],\" +\n        \"timePickerField[ngModel],timePickerField[formControlName],timePickerField[formControl],\" +\n        \"time-picker-field[ngModel],time-picker-field[formControlName],time-picker-field[formControl]\",\n    providers: [TIME_PICKER_VALUE_ACCESSOR],\n    host: {\n        \"(timeChange)\": \"handleTimeChange($event)\",\n        \"(timePickerOpened)\": \"handleTimePickerOpened($event)\",\n        \"(timePickerClosed)\": \"handleTimePickerClosed($event)\"\n    },\n})\nexport class TimePickerValueAccessor extends BaseValueAccessor<TimePickerField> {\n    private _hasBeenOpened = false;\n    constructor(elementRef: ElementRef) {\n        super(elementRef.nativeElement);\n    }\n\n    writeValue(value: any): void {\n        const normalized = super.normalizeValue(value);\n        this.view.time = normalized;\n    }\n\n    handleTimeChange(args: any) {\n        if (this._hasBeenOpened) {\n            this.onChange(args.value);\n        }\n    }\n\n    handleTimePickerOpened(args: any) {\n        this._hasBeenOpened = true;\n    }\n\n    handleTimePickerClosed(args: any) {\n        this.onTouched();\n    }\n}\n\n/**\n * The accessor for setting a date and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <DateTimePickerFields [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n    selector: \"DateTimePickerFields[ngModel],DateTimePickerFields[formControlName],DateTimePickerFields[formControl],\" +\n        \"datetimepickerfields[ngModel],datetimepickerfields[formControlName],datetimepickerfields[formControl],\" +\n        \"dateTimePickerFields[ngModel],dateTimePickerFields[formControlName],dateTimePickerFields[formControl],\" +\n        \"date-time-picker-fields[ngModel],date-time-picker-fields[formControlName],date-time-picker-fields[formControl]\",\n    providers: [DATE_TIME_PICKERS_VALUE_ACCESSOR],\n    host: {\n        \"(dateChange)\": \"handleDateChange($event)\",\n        \"(datePickerOpened)\": \"handlePickerOpened($event)\",\n        \"(datePickerClosed)\": \"handlePickerClosed($event)\",\n        \"(timePickerOpened)\": \"handlePickerOpened($event)\",\n        \"(timePickerClosed)\": \"handlePickerClosed($event)\"\n    },\n})\nexport class DateTimePickersValueAccessor extends BaseValueAccessor<DateTimePickerFields> {\n    private _hasBeenOpened = false;\n    constructor(elementRef: ElementRef) {\n        super(elementRef.nativeElement);\n    }\n\n    writeValue(value: any): void {\n        const normalized = super.normalizeValue(value);\n        this.view.date = normalized;\n    }\n\n    handleDateChange(args: any) {\n        if (this._hasBeenOpened) {\n            this.onChange(args.value);\n        }\n    }\n\n    handlePickerOpened(args: any) {\n        this._hasBeenOpened = true;\n    }\n\n    handlePickerClosed(args: any) {\n        this.onTouched();\n    }\n}","import { NgModule } from \"@angular/core\";\nimport { registerElement } from \"@nativescript/angular\";\nimport { DatePickerField, TimePickerField, DateTimePickerFields } from \"@nativescript/datetimepicker\";\nimport {\n  DatePickerFieldDirective,\n  TimePickerFieldDirective,\n  DateTimePickerFieldsDirective,\n} from \"./nativescript-datetimepicker.directives\";\nimport {\n  DatePickerValueAccessor,\n  TimePickerValueAccessor,\n  DateTimePickersValueAccessor,\n} from \"./nativescript-datetimepicker.accessors\";\n\nexport {\n  DatePickerFieldDirective,\n  TimePickerFieldDirective,\n  DateTimePickerFieldsDirective,\n} from \"./nativescript-datetimepicker.directives\";\nexport {\n  DatePickerValueAccessor,\n  TimePickerValueAccessor,\n  DateTimePickersValueAccessor,\n} from \"./nativescript-datetimepicker.accessors\";\n\n@NgModule({\n  declarations: [\n    DatePickerFieldDirective,\n    TimePickerFieldDirective,\n    DateTimePickerFieldsDirective,\n    DatePickerValueAccessor,\n    TimePickerValueAccessor,\n    DateTimePickersValueAccessor,\n  ],\n  exports: [\n    DatePickerFieldDirective,\n    TimePickerFieldDirective,\n    DateTimePickerFieldsDirective,\n    DatePickerValueAccessor,\n    TimePickerValueAccessor,\n    DateTimePickersValueAccessor,\n  ],\n})\nexport class NativeScriptDateTimePickerModule {}\n\nregisterElement(\"DatePickerField\", () => DatePickerField);\nregisterElement(\"TimePickerField\", () => TimePickerField);\nregisterElement(\"DateTimePickerFields\", () => DateTimePickerFields);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}